NOME DB= Videogames

Esercizi QUERY
1- Selezionare tutte le software house americane (3)
select * 
from Videogames.software_houses sh
where  country like 'United States'  ;



2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)
select *
from Videogames.players p 
where city like "rogahnland";



3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)
select *
from Videogames.players p 
where name like "%a";



4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
select *
from Videogames.reviews r 
where player_id = 800;



5- Contare quanti tornei ci sono stati nell'anno 2015 (9)
select count(*) as n_tornei_2015
from Videogames.tournaments t 
where `year` = 2015;



6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
select *
from Videogames.awards a 
where description like "%facere%";



7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
select distinct v.id 
from Videogames.videogames v 
	join Videogames.category_videogame cv 
		on v.id = cv.videogame_id 
	join Videogames.categories c 
		on cv.category_id = c.id 
where c.id = 2 or  c.id = 6;



8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
select *
from Videogames.reviews r 
where rating between 2 and 4;



9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
select *
from Videogames.videogames v 
where year(v.release_date) = 2020;



10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443)
select distinct v.id
from Videogames.videogames v 
	join Videogames.reviews r 
		on v.id = r.videogame_id 
where r.rating = 5;





Esercizi GROUP BY
1- Contare quante software house ci sono per ogni paese (3)
select sh.country  , count(*) as num_software_houses
from Videogames.software_houses sh 
group by sh.country ;



2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
select v.id , count(*) as num_reviews 
from Videogames.videogames v 
	join Videogames.reviews r 
		on v.id = r.videogame_id 
group by r.videogame_id; 



3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
select pl.id , count(*) as num_videogames 
from Videogames.videogames v 
	join Videogames.pegi_label_videogame plv 
		on v.id = plv.videogame_id 
	join Videogames.pegi_labels pl 
		on plv.pegi_label_id = pl.id 
group by v.id 



4- Mostrare il numero di videogiochi rilasciati ogni anno (11)
select count(*)
from Videogames.videogames v 
group by year(v.release_date);




5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
select dv.device_id ,count(*)
from Videogames.device_videogame dv 
group by dv.videogame_id 



6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
select r.videogame_id , avg(r.rating) as media_voti 
from Videogames.reviews r 
group by r.videogame_id
order by media_voti;




Esercizi join
1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
select distinct p.*
from players p  
    join reviews r 
        on p.id = r.player_id; 



2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
select distinct v.*
from videogames v  
    join tournament_videogame tv  
        on v.id = tv.videogame_id 
    join tournaments t 
        on tv.tournament_id = t.id
where t.year = 2016;



3- Mostrare le categorie di ogni videogioco (1718)
select v.name , c.name
from videogames v  
    join category_videogame cv  
        on v.id = cv.videogame_id 
    join categories c  
        on cv.category_id  = c.id;



4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
select distinct sh.*
from software_houses sh 
    join videogames v  
        on sh.id = v.software_house_id 
where YEAR(v.release_date) > 2020;



5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
select a.name as, av.year, sh.name 
from awards a 
    join award_videogame av 
        on a.id  = av.award_id
    join videogames v 
        on av.videogame_id = v.id 
    join software_houses sh 
        on v.software_house_id = sh.id;



6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
select distinct v.name , c.name , pl.name
    join videogames v 
        on r.videogame_id = v.id 
    join pegi_label_videogame plv
        on v.id = plv.videogame_id
    join pegi_labels pl 
        on plv.pegi_label_id = pl.id 
    join category_videogame cv 
        on v.id = cv.videogame_id 
    join categories c 
        on cv.category_id = c.id
where r.rating >= 4;



7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
select distinct v.id, v.name
from videogames v 
    join tournament_videogame tv 
        on v.id = tv.videogame_id
    join tournaments t 
        on tv.tournament_id = t.id 
    join player_tournament pt 
        on t.id = pt.tournament_id 
    join players p 
        on pt.player_id = p.id
where p.name LIKE "S%"
order by v.id;



8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)
select v.name as vg_name, a.name as award_name, av.`year`, t.city
from awards a 
    join award_videogame av 
        on a.id = av.award_id 
    join videogames v 
        on av.videogame_id = v.id 
    join tournament_videogame tv
        on v.id = tv.videogame_id 
    join tournaments t 
        on tv.tournament_id = t.id
where a.name LIKE "gioco dell'anno" AND av.`year` = 2018;



9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)
select p.id, p.name, p.lastname 
from awards a 
    join award_videogame av 
        on a.id = av.award_id 
    join videogames v 
        on av.videogame_id = v.id 
    join tournament_videogame tv
        on v.id = tv.videogame_id 
    join tournaments t 
        on tv.tournament_id = t.id
    join player_tournament pt 
        on t.id = pt.tournament_id 
    join players p 
        on pt.player_id = p.id
where a.name LIKE "gioco più atteso" AND av.`year` = 2018 AND t.`year` = 2019;